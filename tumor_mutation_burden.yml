Tumor Mutation Burden:
  Version_info: Version 1.0.0, 29 September 2017 <#-- Developed by Muhammad Ekram -->
  Package_version: <GENERATED BY CI LOOP>
  dialog_group: Cancer
  image_color: blue
  list_description: Calculate the tumor mutation (somatic) burden in cancer.
  description: |
   <div style="margin:10px;"><font face="Arial, sans-serif" size = "4">
   <font size="4.5">Version 1.0.0, 29 September 2017</font><br>
   <font size="4.5">Package_version: <GENERATED BY CI LOOP></font><br>
   <div style="margin:10px,10px,10px,0px;">
    <font face="Arial, sans-serif" size = "4"><p style="margin:0px;padding:0px;"><font size="4.5">This cancer-specific dialog calculates the number of somatic mutations (non-synonymous and/or synonymous) per megabases (Mb) of coding regions.</font></p>
    <a style="color:#0b68b2;"><b>Required parameters:</b></a><br><br>
    <table style="border-spacing:10">
     <tr><td><span style="color:#00aeef">SUBJECTS </span> </td><td> Select sample(s) / subject(s). 'SUBJECTS' are required.</td></tr>
     <tr><td><span style="color:#00aeef">VEP_max_consequence_nonSyn </span> </td><td> Select variant VEP maximum consequences that defines non-synonymous variants.</td></tr>
     <tr><td><span style="color:#00aeef">VEP_max_consequence_syn </span> </td><td> Select variant VEP maximum consequences that defines synonymous variants.</td></tr>
     <tr><td><span style="color:#00aeef">maxAf </span> </td><td>Maximum germline population allele frequency filter which is used to exclude common variants that are likely to be germline mutations. The population genome databases used are 1000 Genomes Project, DECODE,Â Exome Aggregation Consortium (ExAC) database, Exome Sequencing Project (ESP), Genomes of the Netherlands (GoNL), and Japanese Human Genome Program (Kyoto).</td></tr>
    </table>
    <a style="color:#0b68b2;"><b><font size="4">Optional parameters:</font></b></a>
    <table style="border-spacing:10">
     <tr><td><span style="color:#00aeef">VEPgenes </span></td><td> Reference database used for transcripts.</td></tr>
     <tr><td><span style="color:#00aeef">captureTargetRegions </span></td><td> Target region from which overlapping variants are selected to calculate TMB.</td></tr>
     <tr><td><span style="color:#00aeef">transcriptBiotype </span></td><td> Transcript type(s) from which overlapping variants are selected to calculate TMB.</td></tr>
     <tr><td><span style="color:#00aeef">CDSonly </span></td><td> Whether TMB calculation should be done in CDS (Coding DNA Sequences) only.</td></tr>
     <tr><td><span style="color:#00aeef">RefPath </span></td><td> Relative path to the reference database folder.</td></tr>
     <tr><td><span style="color:#00aeef">VEPpath </span></td><td> Relative path to the folder containing the VEP database.</td></tr>
     <tr><td><span style="color:#00aeef">refVersion </span></td><td> Version of the current reference files used (Ensembl/RefSeq). This is only used to perform liftOver of the target region if is of different version than the reference files.</td></tr>
     <tr><td><span style="color:#00aeef">cosmicFilterMin </span></td><td> Minimum number of samples in COSMIC database a particular mutation is present in so that it can be retained despite being present at >= 'maxAf' frequency in the germline database.</td></tr>
     <tr><td><span style="color:#00aeef">tmbStDevCutoffHigh </span></td><td> Absolute standard deviation value used to filter the high TMB samples in each project in Perspective.</td></tr>
     <tr><td><span style="color:#00aeef">tmbStDevCutoffLow </span></td><td> Absolute standard deviation value used to filter the low TMB samples in each project in Perspective.</td></tr>
    </table>
   </div>
  query: |
    <#setting locale="en_US">

    def ##ref## = ${RefPath.val?trim?replace("[/]+$", "", "r")}; ${br}${br}

    def ##sampleList## = SubjectReports/All.rep.link; ${br}${br}

    def ##varcalls## = source/var/cancer_varcalls.gord; ${br}${br}

    def ##maxAF## = ${maxAf.val}; ${br}${br}

    def ##cosmicFilterMin## = ${cosmicFilterMin.val}; ${br}${br}

    def ##cosmic## = ##ref##/cosmic.gorz; ${br}${br}

    def ##maxConsequenceNonSyn## = ${VEP_max_consequence_nonSyn.val}; ${br}${br}

    def ##maxConsequenceSyn## = ${VEP_max_consequence_syn.val}; ${br}${br}

    def ##vepFile## = vep_single_wgs.gord; ${br}${br}

    def ##vepSingle## = ${VEPpath.val?replace("[/]+$", "", "r")}/vep_v85/##vepFile##; ${br}${br}

    <#if VEPgenes.val == "Ensembl">
     def ##exonFile## = ##ref##/ensgenes/ensgenes_exons.gorz; ${br}${br}
     def ##transcriptFile## = ##ref##/ensgenes/ensgenes_transcripts.gor; ${br}${br}
    <#elseif VEPgenes.val == "RefSeq">
     def ##exonFile## = ##ref##/refgenes/refgenes_exons.gorz; ${br}${br}
     def ##transcriptFile## = ##ref##/refgenes/refgenes_transcripts.gor; ${br}${br}
    </#if>

    <#if SUBJECTS.val == 'NONE'>
     def ##selectedPNs## = "###"; ${br}${br}
    </#if>

    create #selectedPNs# = nor -h ##sampleList## ${br}
    | where pn in (${SUBJECTS.val}); ${br}${br}

    def ##transcriptBioType## = ${transcriptBiotype.val}; ${br}${br}

    <#-- Path to file to be used for liftover of the agilent capture region files. Put 'None' if liftover is not required. Values can be with or without single/double quotes. -->
    <#assign agilentCaptureLiftOver>
     <#if refVersion.val == "hg38">
      config/liftover/hg19tohg38.gor
     <#elseif refVersion.val == "hg19">
      None
     </#if>
    </#assign>

    <#macro captureTargetProcess liftOverFile="None">   <#-- If value for the parameter 'liftOverFile' is not provided no liftOver step is performed. -->
     create #wesTargets# = gor ##targetRegions## ${br}
     <#if liftOverFile?upper_case != "NONE">
      | liftover ${liftOverFile} ${br}
      | where hgold_liftoverstatus == 'mapped' ${br}
     </#if>
     | join -r -segseg <(gor ##exonFile## | where transcript_biotype in (##transcriptBioType##)) ${br}
     | select #1-#3 ${br}
     <#if CDSonly.val == "Yes">
      | join -snpseg <(gor <(nor ##transcriptFile## | select #1,#9,#10 | where (not(cdsEnd in ('.')))) | sort genome) ${br}
     </#if>
     | segspan ${br}
     | select #1-#3; ${br}${br}
    </#macro>

    <#if captureTargetRegions.val != "None">
     def ##agilentCapturePath## = user_data/EF_cancer_analysis/TMB/agilent; /* Path to folder where the agilent capture region files are present. Without trailing '/'. */${br}${br}
     <#if captureTargetRegions.val == "Agilent SureSelect Human All Exon V1 (2010)">
      def ##targetRegions## = ##agilentCapturePath##/SureSelect_Human_All_Exon_V1.gorz; ${br}${br}
     <#elseif captureTargetRegions.val == "Agilent SureSelect Human All Exon V2 (2010)">
      def ##targetRegions## = ##agilentCapturePath##/SureSelect_Human_All_Exon_V2.gorz; ${br}${br}
     <#elseif captureTargetRegions.val == "Agilent SureSelect Human All Exon 50Mb (2010)">
      def ##targetRegions## = ##agilentCapturePath##/SureSelect_Human_All_Exon_50Mb_Regions.gorz; ${br}${br}
     <#elseif captureTargetRegions.val == "Agilent SureSelect Human All Exon V4 (11/01/2011)">
      def ##targetRegions## = ##agilentCapturePath##/SureSelect_Human_All_Exon_V4_Regions.gorz; ${br}${br}
     <#elseif captureTargetRegions.val == "Agilent SureSelect Human All Exon V4+UTRs (11/01/2011)">
      def ##targetRegions## = ##agilentCapturePath##/SureSelect_Human_All_Exon_V4_UTRs_Regions.gorz; ${br}${br}
     <#elseif captureTargetRegions.val == "Agilent SureSelect Human All Exon V5 (11/09/2012)">
      def ##targetRegions## = ##agilentCapturePath##/SureSelect_Human_All_Exon_V5_Regions.gorz; ${br}${br}
     <#elseif captureTargetRegions.val == "Agilent SureSelect Human All Exon V5+UTRs (11/09/2012)">
      def ##targetRegions## = ##agilentCapturePath##/SureSelect_Human_All_Exon_V5_UTRs_Regions.gorz; ${br}${br}
     <#elseif captureTargetRegions.val == "Agilent SureSelect Human All Exon V6 r2 (01/12/2016)">
      def ##targetRegions## = ##agilentCapturePath##/SureSelect_Human_All_Exon_V6_r2_Regions.gorz; ${br}${br}
     <#elseif captureTargetRegions.val == "Agilent SureSelect Human All Exon V6+COSMIC r2 (01/12/2016)">
      def ##targetRegions## = ##agilentCapturePath##/SureSelect_Human_All_Exon_V6_COSMIC_r2_Regions.gorz; ${br}${br}
     <#elseif captureTargetRegions.val == "Agilent SureSelect Human All Exon V6+UTR r2 (01/12/2016)">
      def ##targetRegions## = ##agilentCapturePath##/SureSelect_Human_All_Exon_V6_UTR_r2_Regions.gorz; ${br}${br}
     <#else>
      create #wesTargets# = ###
     </#if>
     <@captureTargetProcess liftOverFile = agilentCaptureLiftOver?replace("\"","")?replace("\'","")?trim/>
    <#else>
     def ##targetRegions## = ##exonFile##; ${br}${br}
     create #wesTargets# = gor ##targetRegions## ${br}
     | where transcript_biotype in (##transcriptBioType##) ${br}
     <#if CDSonly.val == "Yes">
      | join -snpseg <(gor <(nor ##transcriptFile## | select #1,#9,#10 | where (not(cdsEnd in ('.')))) | sort genome) ${br}
     </#if>
     | segspan ${br}
     | select #1-#3; ${br}${br}
    </#if>

    /* The total length of the targeted region in '#wesTargets#'. The length is expressed in Mb. */ ${br}
    create #exonTotal# = nor <(gor [#wesTargets#] | calc exon_length = int(bpStop - bpStart + 1) | group genome -ic exon_length -sum) | select sum_exon_length | calc exome_size = float(sum_exon_length/1000000) | select exome_size; ${br}${br}

    create #tumor_vars_all# = pgor -ff [#selectedPNs#] ##varcalls## -s PN ${br}
    | where ((mutect_judgement in ('KEEP') and float(tumor_reads_hq) >= 2 and (float(tumor_reads_hq)/float(tumor_reads_all)) >= 0.01) or (varscan2_somatic_status in ('Somatic') and float(varscan2_somatic_p_value) < 1.0E-3)); /* filtering and retaining only variants of high quality and confidence. */ ${br}${br}

    create #tumor_vars_germline# = pgor [#tumor_vars_all#] ${br}
    | varjoin -r <(gor #alleleFreq# | select chrom,pos,ref,allele,max_af | where max_af >= ##maxAF##) ${br}
    | varjoin -n -r <(gor ##cosmic## | where cnt > ##cosmicFilterMin##); ${br}${br}

    create #tumor_vars_filtered# = pgor [#tumor_vars_all#] ${br}
    | varjoin -n -r [#tumor_vars_germline#]; ${br}${br}

    create #tumor_vars_exons# = pgor [#tumor_vars_filtered#] ${br}
    | join -snpseg <(gor [#wesTargets#]) /* Retaining only the variants that overlap with exons that are protein-coding. */ ${br}
    | select chrom,pos,reference,call,PN ${br}
    | distinct; /* Removing duplicate variants due to overlap with multiple exons. */ ${br}${br}

    create #tmb_output# = nor [#tumor_vars_exons#] ${br}
    | group genome -gc PN -count ${br}
    | rename allCount variant_count_all ${br}
    | multimap -cartesian -h [#exonTotal#] ${br}
    | calc TMB_all = variant_count_all/exome_size /* Calculation of tumor mutational burden in all variants in exons. */ ${br}
    | select PN,variant_count_all,TMB_all,exome_size ${br}
    | map <(nor ##sampleList## | select pn,project_id | distinct) -c pn -h -m "missing"; ${br}${br}

    create #tumor_vars_nonSyn# = pgor [#tumor_vars_exons#] ${br}
    | varjoin -r <(gor ##vepSingle## | where max_consequence in (##maxConsequenceNonSyn##)) ${br}
    | select chrom,pos,reference,call,PN ${br}
    | distinct; /* Removing duplicate variants due to VEP info for mutiple transcripts. */ ${br}${br}

    create #tumor_vars_nonSyn_output# = nor [#tumor_vars_nonSyn#] ${br}
    | group genome -gc PN -count ${br}
    | rename allCount variant_count_nonSyn ${br}
    | multimap -cartesian -h [#exonTotal#] ${br}
    | calc TMB_nonSyn = variant_count_nonSyn/exome_size /* Calculation of tumor mutational burden in only non-synonymous variants in exons. */ ${br}
    | select PN,variant_count_nonSyn,TMB_nonSyn; ${br}${br}

    create #tumor_vars_syn# = pgor [#tumor_vars_exons#] ${br}
    | varjoin -n -r <(gor [#tumor_vars_nonSyn#]) ${br}
    | select chrom,pos,reference,call,PN ${br}
    | varjoin -r <(gor ##vepSingle## | where max_consequence in (##maxConsequenceSyn##)) ${br}
    | select chrom,pos,reference,call,PN ${br}
    | distinct; /* Removing duplicate variants due to VEP info for mutiple transcripts. */ ${br}${br}

    create #tumor_vars_syn_output# = nor [#tumor_vars_syn#] ${br}
    | group genome -gc PN -count ${br}
    | rename allCount variant_count_syn ${br}
    | multimap -cartesian -h [#exonTotal#] ${br}
    | calc TMB_syn = variant_count_syn/exome_size /* Calculation of tumor mutational burden in only synonymous variants in exons. */ ${br}
    | select PN,variant_count_syn,TMB_syn; ${br}${br}

    nor [#tmb_output#] ${br}
    | map [#tumor_vars_nonSyn_output#] -c PN -h -m 0 ${br}
    | calc variant_ratio_nonSyn_to_all = float(variant_count_nonSyn/variant_count_all) ${br}
    | map [#tumor_vars_syn_output#] -c PN -h -m 0 ${br}
    | calc variant_ratio_syn_to_all = float(variant_count_syn/variant_count_all) ${br}
    | select pn,project_id,variant_count_all,TMB_all,variant_count_nonSyn,TMB_nonSyn,variant_ratio_nonSyn_to_all,variant_count_syn,TMB_syn,variant_ratio_syn_to_all ${br}
    | rank TMB_all genome -z -gc project_id ${br}
    | rename z_genome Zscore_TMB_all ${br}
    | rank TMB_nonSyn genome -z -gc project_id ${br}
    | rename z_genome Zscore_TMB_nonSyn ${br}
    | rank TMB_syn genome -z -gc project_id ${br}
    | rename z_genome Zscore_TMB_syn ${br}
    | calc Chrom = "chrA" ${br}
    | calc Start = INT(0) ${br}
    | calc End = INT(1000000000) ${br}
    | select Chrom,Startx,End,PN-Zscore_TMB_nonSyn ${br}${br}

  arguments:
   - name: SUBJECTS
     optional: no
     type: pn_lists_entries
     values_path: SubjectReports/All.rep.link
     format:
       values: "%s"
       empty: "NONE"
     description: "Select sample(s) / subject(s). 'SUBJECTS' are required."
   - name: VEP_max_consequence_nonSyn
     type: string
     optional: yes
     default: "transcript_ablation,splice_acceptor_variant,splice_donor_variant,stop_gained,frameshift_variant,stop_lost,start_lost,transcript_amplification,inframe_insertion,inframe_deletion,missense_variant,protein_altering_variant,splice_region_variant,incomplete_terminal_codon_variant"
     values_path: VEP_impact
     format:
       keywords: contains(%s)
       values: "%s"
       empty: 2=2
     description: "Select variant VEP maximum consequences that defines non-synonymous variants."
   - name: VEP_max_consequence_syn
     type: string
     optional: yes
     default: "stop_retained_variant,synonymous_variant,coding_sequence_variant,mature_miRNA_variant,5_prime_UTR_variant,3_prime_UTR_variant,non_coding_transcript_exon_variant,intron_variant,NMD_transcript_variant,non_coding_transcript_variant,upstream_gene_variant,downstream_gene_variant,TFBS_ablation,TFBS_amplification,TF_binding_site_variant,regulatory_region_ablation,regulatory_region_amplification,feature_elongation,regulatory_region_variant,feature_truncation,intergenic_variant,regulatory_region_fusion,regulatory_region_translocation,TFBS_fusion,TFBS_translocation
"
     values_path: VEP_impact
     format:
       keywords: contains(%s)
       values: "%s"
       empty: 2=2
     description: "Select variant VEP maximum consequences that defines synonymous variants."
   - name: maxAf
     optional: yes
     type: string
     values: ["None","0.1","0.05","0.01","0.005","0.002","0.001","0.0005"]
     default: "0.01"
     description: "Maximum germline population allele frequency filter which is used to exclude common variants that are likely to be germline mutations. The population genome databases used are 1000 Genomes Project, DECODE,Â Exome Aggregation Consortium (ExAC) database, Exome Sequencing Project (ESP), Genomes of the Netherlands (GoNL), and Japanese Human Genome Program (Kyoto)."
   - name: VEPgenes
     optional: yes
     type: string
     default: "Ensembl"
     values: ["Ensembl","RefSeq"]
     description: "Reference database used for transcripts."
   - name: captureTargetRegions
     optional: yes
     type: string
     default: "None"
     values: ["None","Agilent SureSelect Human All Exon V1 (2010)","Agilent SureSelect Human All Exon V2 (2010)","Agilent SureSelect Human All Exon 50Mb (2010)","Agilent SureSelect Human All Exon V4 (11/01/2011)","Agilent SureSelect Human All Exon V4+UTRs (11/01/2011)","Agilent SureSelect Human All Exon V5 (11/09/2012)","Agilent SureSelect Human All Exon V5+UTRs (11/09/2012)","Agilent SureSelect Human All Exon V6 r2 (01/12/2016)","Agilent SureSelect Human All Exon V6+COSMIC r2 (01/12/2016)","Agilent SureSelect Human All Exon V6+UTR r2 (01/12/2016)"]
     description: "Target region from which overlapping variants are selected to calculate TMB."
   - name: transcriptBiotype
     optional: yes
     type: string
     values_path: user_data/EF_cancer_analysis/TMB/exons_transcript_biotype_ensgenes_refgenes.tsv
     default: "protein_coding"
     format:
       keywords: contains(%s)
       values: "%s"
       empty: 2=2
     description: "Transcript type(s) from which overlapping variants are selected to calculate TMB."
   - name: CDSonly
     optional: yes
     type: string
     default: "Yes"
     values: ["Yes","No"]
     description: "Whether TMB calculation should be done in CDS (Coding DNA Sequences) only."
   - name: RefPath
     optional: yes
     type: string
     default: "ref"
     description: "Relative path to the reference database folder."
   - name: VEPpath
     optional: yes
     type: string
     default: "source/anno"
     description: "Relative path to the folder containing the VEP database."
   - name: refVersion
     advanced: yes
     optional: yes
     type: string
     default: "hg19"
     values: ["hg38","hg19"]
     description: "Version of the current reference files used (Ensembl/RefSeq). This is only used to perform liftOver of the target region if is of different version than the reference files."
   - name: cosmicFilterMin
     advanced: yes
     optional: yes
     type: number
     default: 4
     description: "Minimum number of samples in COSMIC database a particular mutation is present in so that it can be retained despite being present at >= 'maxAf' frequency in the germline database."
   - name: tmbStDevCutoffHigh
     advanced: yes
     optional: yes
     type: number
     default: 2
     description: "Absolute standard deviation value used to filter the high TMB samples in each project in Perspective."
   - name: tmbStDevCutoffLow
     advanced: yes
     optional: yes
     type: number
     default: 1
     description: "Absolute standard deviation value used to filter the low TMB samples in each project in Perspective."

  perspectives:
   - name: "High TMB samples (All)"
     group: "ALL"
     default: no
     default_view: columns
     filter: |
       Zscore_TMB_all >= ${tmbStDevCutoffHigh.val}
   - name: "High TMB samples (Non-synonymous)"
     group: "ALL"
     default: no
     default_view: columns
     filter: |
       Zscore_TMB_nonsyn >= ${tmbStDevCutoffHigh.val}
   - name: "High TMB samples (Synonymous)"
     group: "ALL"
     default: no
     default_view: columns
     filter: |
       Zscore_TMB_syn >= ${tmbStDevCutoffHigh.val}
   - name: "Low TMB samples (All)"
     group: "ALL"
     default: no
     default_view: columns
     filter: |
       Zscore_TMB_all <= -${tmbStDevCutoffLow.val}
   - name: "Low TMB samples (Non-synonymous)"
     group: "ALL"
     default: no
     default_view: columns
     filter: |
       Zscore_TMB_nonsyn <= -${tmbStDevCutoffLow.val}
   - name: "Low TMB samples (Synonymous)"
     group: "ALL"
     default: no
     default_view: columns
     filter: |
       Zscore_TMB_syn <= -${tmbStDevCutoffLow.val}

  drill_in_reports:
   - name: "Project level statistics (All)"
     query: |
         <#setting locale="en_US">
         group genome -gc project_id -fc tmb_all -avg -med -min -max
     required_columns: ["project_id"]
   - name: "Project level statistics (Non-synonymous)"
     query: |
         <#setting locale="en_US">
         group genome -gc project_id -fc tmb_nonsyn -avg -med -min -max
     required_columns: ["project_id"]
   - name: "Project level statistics (Synonymous)"
     query: |
         <#setting locale="en_US">
         group genome -gc project_id -fc tmb_syn -avg -med -min -max
     required_columns: ["project_id"]